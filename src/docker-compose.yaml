version: "2.3"
services:
  # ROS eloquent

  maze_navigation:
    build:
        context: ./
        dockerfile: ./Dockerfile
        # maze_robot_docker
    tty: true
    network_mode: host
    privileged: false
    command: ros2 launch maze_bringup navigation_maze.launch.py

  rosbot:
    image: husarion/rosbot
    tty: true      
    restart: on-failure
    environment:
      - "ROS_MASTER_URI=http://my-ros-master:11311"
      - "SERIAL_PORT=/dev/ttyS4" # default: ttyS1 - rosbot2.0; ttyS4 - rosbot2.0 pro
    privileged: false
    devices:
      - "/dev/ttyS4"   # must match environment SERIAL_PORT 
    command: roslaunch rosbot_description rosbot_docker.launch

  # ROS Noetic
  my-ros-master:
    image: ros:noetic-ros-core
    restart: on-failure
    tty: true 
    # environment:
    #   - "ROS_MASTER_URI=http://my-ros-master:11311"    
    command: stdbuf -o L roscore

  # ROS Noetic + ROS 2 eloquent
  bridge:
    image: ros:eloquent-ros1-bridge
    restart: on-failure
    environment:
      - "ROS_MASTER_URI=http://my-ros-master:11311"
    #network_mode: host
    command: ros2 run ros1_bridge dynamic_bridge

#   rviz2:
#     image: husarion/rviz2-rosbot:vnc
#     restart: on-failure
#     ports:
#       - "5900:5900"
#       - "6080:6080"

  # rplidar:
  #   image: husarion/rplidar:latest
  #   restart: unless-stopped
  #   environment:
  #       - "ROS_MASTER_URI=http://my-ros-master:11311"
  #   devices:
  #     - /dev/ttyUSB0
  #   tty: true      
  #   command: roslaunch rplidar_ros rplidar_a3.launch # For Rosbot 2.0 PRO use roslaunch rplidar_ros rplidar_a3.launch